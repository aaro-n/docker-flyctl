name: 构建并推送 Docker 镜像

on:
  push:
    branches:
      - main
  schedule:
    - cron: "33 */12 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: 检出仓库
      uses: actions/checkout@v2

    - name: 登录 Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: 安装 Docker CLI 插件
      run: |
        docker run --privileged --rm tonistiigi/binfmt:latest --install all
        docker buildx create --use
        docker buildx inspect --bootstrap

    - name: 构建 Docker 镜像
      run: |
        docker buildx build --platform linux/amd64 -t "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest" .

    - name: 获取 flyctl 版本并设置环境变量
      run: |
        export FLYCTL_VERSION=$(docker run --rm "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest" flyctl version | sed -n 's/^flyctl v\([^ ]*\).*/\1/p')
        echo "Flyctl 版本: $FLYCTL_VERSION"
        echo "FLYCTL_VERSION=$FLYCTL_VERSION" >> env_file

    - name: 将环境变量写入文件
      run: |
        echo $(cut -d'=' -f2 <<< "$(cat env_file)") > env_file

    - name: 比较文件并执行相应操作
      id: check-version
      run: |
        if cmp -s env_file version; then
          echo "版本相同，跳过推送和提交"
          echo "::set-output name=skip::true"
        else
          echo "版本不同，执行推送和提交"
          cp env_file version
        fi

    - name: 推送 Docker 镜像
      if: steps.check-version.outputs.skip != 'true'
      run: |
        # 从 env_file 中获取版本信息
        DOCKER_TAG=$(cut -d'=' -f2 env_file)

        # 推送镜像
        docker buildx build --platform linux/amd64,linux/arm64,linux/386 -t "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:$DOCKER_TAG" --push .
        docker buildx build --platform linux/amd64,linux/arm64,linux/386 -t "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest" --push .

    - name: 提交推送更新到 GitHub
      if: steps.check-version.outputs.skip != 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version
        git commit -m "Update version to $DOCKER_TAG"
        git push
